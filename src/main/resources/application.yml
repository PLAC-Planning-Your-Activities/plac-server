spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:3306/db_plac?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}


  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy # set DB column name by snake case
    show-sql: true
    generate-ddl: false

  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  security:
    oauth2:
      google:
        token_uri: https://oauth2.googleapis.com/token
        client_id: ${GOOGLE_LOGIN_CLIENT_ID}
        client_secret: ${GOOGLE_LOGIN_CLIENT_SECRET}
        redirect_uri: http://localhost:8080/oauth/google
        grant_type: authorization_code
        user_info_endpoint: https://www.googleapis.com/oauth2/v3/userinfo



      client:

        registration:
          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: ${NAVER_LOGIN_CLIENT_ID}
            client-secret: ${NAVER_LOGIN_CLIENT_SECRET}
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글, 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          kakao:
            client-id: ${KAKAO_LOGIN_CLIENT_ID}
            client-secret: ${KAKAO_LOGIN_CLIENT_SECRET}
            scope:
              - account_email
              - profile_nickname
              - profile_image
              - birthday
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  profiles:
    include: oauth


  ### DB initialize auto insert ###
  sql:
    init:
      mode: always
      encoding: utf-8

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

plac:
  jwt:
    secret:
      access: ${JWT_ACCESS_SECRET}
      refresh: ${JWT_REFRESH_SECRET}
  email:
    expire-minutes:
      signup: 3
      completion: 5
  s3:
    accessKey: ${S3_ACCESS_KEY}
    secretKey: ${S3_SECRET_KEY}
    region: ap-northeast-2
    bucketName: ${S3_BUCKET_NAME}
    urlPrefix: ${S3_URL}
    memberImagePath: ${S3_MEMBER_IMAGE_PATH}
    defaultImagePath: ${S3_DEFAULT_IMAGE_PATH}